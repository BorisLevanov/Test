{
  "_from": "wdio-jasmine-framework@^0.3.2",
  "_id": "wdio-jasmine-framework@0.3.2",
  "_inBundle": false,
  "_integrity": "sha1-l4QSFCEqm1f3DZB3Tw2bR759+YE=",
  "_location": "/wdio-jasmine-framework",
  "_phantomChildren": {
    "core-js": "2.5.3"
  },
  "_requested": {
    "escapedName": "wdio-jasmine-framework",
    "fetchSpec": "^0.3.2",
    "name": "wdio-jasmine-framework",
    "raw": "wdio-jasmine-framework@^0.3.2",
    "rawSpec": "^0.3.2",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/wdio-jasmine-framework/-/wdio-jasmine-framework-0.3.2.tgz",
  "_shasum": "97841214212a9b57f70d90774f0d9b47be7df981",
  "_spec": "wdio-jasmine-framework@^0.3.2",
  "_where": "/home/rep71le/MuTest",
  "author": {
    "email": "christian@saucelabs.com",
    "name": "Christian Bromann"
  },
  "bugs": {
    "url": "https://github.com/webdriverio/wdio-jasmine-framework/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "christian-bromann",
      "email": "mail@christian-bromann.com"
    },
    {
      "name": "Christian Bromann",
      "email": "github@christian-bromann.com"
    },
    {
      "name": "patthiel",
      "email": "pthiel@anthropologie.com"
    },
    {
      "name": "W. van Kuipers",
      "email": "w.vankuipers@lukkien.com"
    },
    {
      "name": "Kurt Harriger",
      "email": "kharriger@rallydev.com"
    },
    {
      "name": "Boris Serdiuk",
      "email": "just-boris@hotmail.com"
    },
    {
      "name": "Reuben",
      "email": "reuben.pasquini@hp.com"
    },
    {
      "name": "just-boris",
      "email": "just-boris@yandex-team.ru"
    },
    {
      "name": "Pat Thiel",
      "email": "patthiel@gmail.com"
    }
  ],
  "dependencies": {
    "babel-runtime": "6.25.0",
    "jasmine": "^2.5.3",
    "wdio-sync": "0.7.0"
  },
  "deprecated": false,
  "description": "A WebdriverIO plugin. Adapter for Jasmine testing framework.",
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-core": "^6.24.1",
    "babel-eslint": "^7.2.1",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-rewire": "^1.1.0",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-stage-0": "^6.24.1",
    "codeclimate-test-reporter": "^0.4.1",
    "eslint": "^4.1.0",
    "eslint-config-standard": "^10.2.0",
    "eslint-plugin-import": "^2.2.0",
    "eslint-plugin-mocha": "^4.9.0",
    "eslint-plugin-node": "^5.0.0",
    "eslint-plugin-promise": "^3.5.0",
    "eslint-plugin-standard": "^3.0.0",
    "isparta": "^4.0.0",
    "mocha": "^3.2.0",
    "np": "^2.13.1",
    "npm-run-all": "^4.0.2",
    "q": "^1.5.0",
    "should": "^11.2.1",
    "sinon": "^3.0.0"
  },
  "homepage": "https://github.com/webdriverio/wdio-jasmine-framework#readme",
  "keywords": [
    "jasmine",
    "wdio",
    "wdio-framework",
    "wdio-plugin",
    "webdriverio"
  ],
  "license": "MIT",
  "main": "build/adapter.js",
  "name": "wdio-jasmine-framework",
  "optionalDependencies": {},
  "readme": "WDIO Jasmine Framework Adapter\n==============================\n\n[![Build Status](https://travis-ci.org/webdriverio/wdio-jasmine-framework.svg?branch=master)](https://travis-ci.org/webdriverio/wdio-jasmine-framework) [![Code Climate](https://codeclimate.com/github/webdriverio/wdio-jasmine-framework/badges/gpa.svg)](https://codeclimate.com/github/webdriverio/wdio-jasmine-framework) [![Test Coverage](https://codeclimate.com/github/webdriverio/wdio-jasmine-framework/badges/coverage.svg)](https://codeclimate.com/github/webdriverio/wdio-jasmine-framework/coverage) [![dependencies Status](https://david-dm.org/webdriverio/wdio-jasmine-framework/status.svg)](https://david-dm.org/webdriverio/wdio-jasmine-framework)\n\n***\n\n> A WebdriverIO plugin. Adapter for Jasmine testing framework.\n\n## Installation\n\nThe easiest way is to keep `wdio-jasmine-framework` as a devDependency in your `package.json`.\n\n```json\n{\n  \"devDependencies\": {\n    \"wdio-jasmine-framework\": \"~0.2.20\"\n  }\n}\n```\n\nYou can simple do it by:\n\n```bash\nnpm install wdio-jasmine-framework --save-dev\n```\n\nInstructions on how to install `WebdriverIO` can be found [here.](http://webdriver.io/guide/getstarted/install.html)\n\n## Configuration\n\nFollowing code shows the default wdio test runner configuration...\n\n```js\n// wdio.conf.js\nmodule.exports = {\n  // ...\n  framework: 'jasmine'\n  jasmineNodeOpts: {\n    defaultTimeoutInterval: 10000\n  }\n  // ...\n};\n```\n\n## `jasmineNodeOpts` Options\n\n### defaultTimeoutInterval\nTimeout until specs will be marked as failed.\n\nType: `Number`<br>\nDefault: 10000\n\n### expectationResultHandler\nThe Jasmine framework allows it to intercept each assertion in order to log the state of the application\nor website depending on the result. For example it is pretty handy to take a screenshot every time\nan assertion fails.\n\nType: `Function`<br>\nDefault: null\n\n### grep\nOption to selectively select it/describe cases to run from spec files.\n\nType: `String[]`<br>\nDefault: []\n\n## invertGrep\nInverts 'grep' matches\n\nType: `String[]`<br>\nDefault: []\n\n## cleanStack\nCleans up stack trace and removes all traces of node module packages\n\nType: `Boolean`<br>\nDefault: true\n\n## Development\n\nAll commands can be found in the package.json. The most important are:\n\nWatch changes:\n\n```sh\n$ npm run watch\n```\n\nRun tests:\n\n```sh\n$ npm test\n\n# run test with coverage report:\n$ npm run test:cover\n```\n\nBuild package:\n\n```sh\n$ npm build\n```\n\n----\n\nFor more information on WebdriverIO see the [homepage](http://webdriver.io).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webdriverio/wdio-jasmine-framework.git"
  },
  "scripts": {
    "build": "run-s clean compile",
    "clean": "rm -rf ./build ./coverage",
    "compile": "babel lib/ -d build/",
    "eslint": "eslint ./lib test/",
    "prepublish": "npm prune && run-s build test",
    "release": "np patch",
    "release:major": "np major",
    "release:minor": "np minor",
    "release:patch": "np patch",
    "test": "run-s eslint test:unit",
    "test:ci": "run-s clean eslint test:cover",
    "test:cover": "babel-node ./node_modules/.bin/isparta cover --include 'lib/*.js' _mocha",
    "test:unit": "mocha --compilers js:babel-core/register test/*.js",
    "watch": "npm run compile -- --watch"
  },
  "version": "0.3.2"
}
